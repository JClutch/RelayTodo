# Each type will have globally unique IDs and will be supclass on Node

interface Node {
  # The id of the object.
  id: ID!
}

# TYPES

type User implements Node {
  # The ID of an object
  id: ID!
  user_id: Int!
  username: String
  todos(status: String = "any", after: String, first: Int, before: String, last: Int): TodoConnection
}

type Todo implements Node {
  id: ID!
  text: String
}






# A connection to a list of items.
type TodoConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [TodoEdge]
}

# An edge in a connection.
type TodoEdge {
  # The item at the end of the edge
  node: Todo

  # A cursor for use in pagination
  cursor: String!
}

# Information about pagination in a connection.
type PageInfo {
  # When paginating forwards, are there more items?
  hasNextPage: Boolean!

  # When paginating backwards, are there more items?
  hasPreviousPage: Boolean!

  # When paginating backwards, the cursor to continue.
  startCursor: String

  # When paginating forwards, the cursor to continue.
  endCursor: String
}